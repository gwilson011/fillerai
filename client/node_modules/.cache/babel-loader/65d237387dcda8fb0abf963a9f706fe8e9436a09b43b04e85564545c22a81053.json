{"ast":null,"code":"var _jsxFileName = \"/Users/gracewilson/fillerai/src/features/counter/Counter.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// import { useAppSelector, useAppDispatch } from \"../../store/hooks.ts\";\n// import {\n//     decrement,\n//     increment,\n//     incrementByAmount,\n//     incrementAsync,\n//     incrementIfOdd,\n//     selectCount,\n// } from \"./counterSlice.ts\";\n// import styles from \"./Counter.module.css\";\n\n// export function Counter() {\n//     const count = useAppSelector(selectCount);\n//     const dispatch = useAppDispatch();\n//     const [incrementAmount, setIncrementAmount] = useState(\"2\");\n\n//     const incrementValue = Number(incrementAmount) || 0;\n\n//     return (\n//         <div>\n//             <div className={styles.row}>\n//                 <button\n//                     className={styles.button}\n//                     aria-label=\"Decrement value\"\n//                     onClick={() => dispatch(decrement())}\n//                 >\n//                     -\n//                 </button>\n//                 <span className={styles.value}>{count}</span>\n//                 <button\n//                     className={styles.button}\n//                     aria-label=\"Increment value\"\n//                     onClick={() => dispatch(increment())}\n//                 >\n//                     +\n//                 </button>\n//             </div>\n//             <div className={styles.row}>\n//                 <input\n//                     className={styles.textbox}\n//                     aria-label=\"Set increment amount\"\n//                     value={incrementAmount}\n//                     onChange={(e) => setIncrementAmount(e.target.value)}\n//                 />\n//                 <button\n//                     className={styles.button}\n//                     onClick={() => dispatch(incrementByAmount(incrementValue))}\n//                 >\n//                     Add Amount\n//                 </button>\n//                 <button\n//                     className={styles.asyncButton}\n//                     onClick={() => dispatch(incrementAsync(incrementValue))}\n//                 >\n//                     Add Async\n//                 </button>\n//                 <button\n//                     className={styles.button}\n//                     onClick={() => dispatch(incrementIfOdd(incrementValue))}\n//                 >\n//                     Add If Odd\n//                 </button>\n//             </div>\n//         </div>\n//     );\n// }\n\nimport React from \"react\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport { selectCount } from \"./counterSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Counter() {\n  _s();\n  const count = useAppSelector(selectCount);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: \"black\"\n    },\n    children: [\"Count is: \", count]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 12\n  }, this);\n}\n_s(Counter, \"HZtyjzN294FsMkUOEFgta8Js+Cs=\", false, function () {\n  return [useAppSelector];\n});\n_c = Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useAppSelector","selectCount","jsxDEV","_jsxDEV","Counter","_s","count","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gracewilson/fillerai/src/features/counter/Counter.tsx"],"sourcesContent":["// import React, { useState } from \"react\";\n\n// import { useAppSelector, useAppDispatch } from \"../../store/hooks.ts\";\n// import {\n//     decrement,\n//     increment,\n//     incrementByAmount,\n//     incrementAsync,\n//     incrementIfOdd,\n//     selectCount,\n// } from \"./counterSlice.ts\";\n// import styles from \"./Counter.module.css\";\n\n// export function Counter() {\n//     const count = useAppSelector(selectCount);\n//     const dispatch = useAppDispatch();\n//     const [incrementAmount, setIncrementAmount] = useState(\"2\");\n\n//     const incrementValue = Number(incrementAmount) || 0;\n\n//     return (\n//         <div>\n//             <div className={styles.row}>\n//                 <button\n//                     className={styles.button}\n//                     aria-label=\"Decrement value\"\n//                     onClick={() => dispatch(decrement())}\n//                 >\n//                     -\n//                 </button>\n//                 <span className={styles.value}>{count}</span>\n//                 <button\n//                     className={styles.button}\n//                     aria-label=\"Increment value\"\n//                     onClick={() => dispatch(increment())}\n//                 >\n//                     +\n//                 </button>\n//             </div>\n//             <div className={styles.row}>\n//                 <input\n//                     className={styles.textbox}\n//                     aria-label=\"Set increment amount\"\n//                     value={incrementAmount}\n//                     onChange={(e) => setIncrementAmount(e.target.value)}\n//                 />\n//                 <button\n//                     className={styles.button}\n//                     onClick={() => dispatch(incrementByAmount(incrementValue))}\n//                 >\n//                     Add Amount\n//                 </button>\n//                 <button\n//                     className={styles.asyncButton}\n//                     onClick={() => dispatch(incrementAsync(incrementValue))}\n//                 >\n//                     Add Async\n//                 </button>\n//                 <button\n//                     className={styles.button}\n//                     onClick={() => dispatch(incrementIfOdd(incrementValue))}\n//                 >\n//                     Add If Odd\n//                 </button>\n//             </div>\n//         </div>\n//     );\n// }\n\nimport React from \"react\";\nimport { useAppSelector } from \"../../store/hooks\";\nimport { selectCount } from \"./counterSlice\";\n\nexport function Counter() {\n    const count = useAppSelector(selectCount);\n    return <div style={{ color: \"black\" }}>Count is: {count}</div>;\n}\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,OAAO,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,KAAK,GAAGN,cAAc,CAACC,WAAW,CAAC;EACzC,oBAAOE,OAAA;IAAKI,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAAC,QAAA,GAAC,YAAU,EAACH,KAAK;EAAA;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAClE;AAACR,EAAA,CAHeD,OAAO;EAAA,QACLJ,cAAc;AAAA;AAAAc,EAAA,GADhBV,OAAO;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}